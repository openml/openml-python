
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/30_extended/flow_id_tutorial.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_30_extended_flow_id_tutorial.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_30_extended_flow_id_tutorial.py:


==================
Obtaining Flow IDs
==================

This tutorial discusses different ways to obtain the ID of a flow in order to perform further
analysis.

.. GENERATED FROM PYTHON SOURCE LINES 11-19

.. code-block:: Python


    # License: BSD 3-Clause

    import sklearn.tree

    import openml









.. GENERATED FROM PYTHON SOURCE LINES 20-22

.. warning::
   .. include:: ../../test_server_usage_warning.txt

.. GENERATED FROM PYTHON SOURCE LINES 22-25

.. code-block:: Python

    openml.config.start_using_configuration_for_example()






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/openml-python/openml-python/examples/30_extended/flow_id_tutorial.py:22: UserWarning: Switching to the test server https://test.openml.org/api/v1/xml to not upload results to the live server. Using the test server may result in reduced performance of the API!
      openml.config.start_using_configuration_for_example()




.. GENERATED FROM PYTHON SOURCE LINES 26-27

Defining a classifier

.. GENERATED FROM PYTHON SOURCE LINES 27-29

.. code-block:: Python

    clf = sklearn.tree.DecisionTreeClassifier()








.. GENERATED FROM PYTHON SOURCE LINES 30-33

1. Obtaining a flow given a classifier
======================================


.. GENERATED FROM PYTHON SOURCE LINES 33-38

.. code-block:: Python


    flow = openml.extensions.get_extension_by_model(clf).model_to_flow(clf).publish()
    flow_id = flow.flow_id
    print(flow_id)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    33




.. GENERATED FROM PYTHON SOURCE LINES 39-48

This piece of code is rather involved. First, it retrieves a
:class:`~openml.extensions.Extension` which is registered and can handle the given model,
in our case it is :class:`openml.extensions.sklearn.SklearnExtension`. Second, the extension
converts the classifier into an instance of :class:`openml.OpenMLFlow`. Third and finally,
the publish method checks whether the current flow is already present on OpenML. If not,
it uploads the flow, otherwise, it updates the current instance with all information computed
by the server (which is obviously also done when uploading/publishing a flow).

To simplify the usage we have created a helper function which automates all these steps:

.. GENERATED FROM PYTHON SOURCE LINES 48-52

.. code-block:: Python


    flow_id = openml.flows.get_flow_id(model=clf)
    print(flow_id)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    33




.. GENERATED FROM PYTHON SOURCE LINES 53-62

2. Obtaining a flow given its name
==================================
The schema of a flow is given in XSD (`here
<https://github.com/openml/OpenML/blob/master/openml_OS/views/pages/api_new/v1/xsd/openml.implementation.upload.xsd>`_).  # noqa E501
Only two fields are required, a unique name, and an external version. While it should be pretty
obvious why we need a name, the need for the additional external version information might not
be immediately clear. However, this information is very important as it allows to have multiple
flows with the same name for different versions of a software. This might be necessary if an
algorithm or implementation introduces, renames or drop hyperparameters over time.

.. GENERATED FROM PYTHON SOURCE LINES 62-65

.. code-block:: Python


    print(flow.name, flow.external_version)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    sklearn.tree._classes.DecisionTreeClassifier openml==0.15.0,sklearn==1.3.2




.. GENERATED FROM PYTHON SOURCE LINES 66-68

The name and external version are automatically added to a flow when constructing it from a
model. We can then use them to retrieve the flow id as follows:

.. GENERATED FROM PYTHON SOURCE LINES 68-72

.. code-block:: Python


    flow_id = openml.flows.flow_exists(name=flow.name, external_version=flow.external_version)
    print(flow_id)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    33




.. GENERATED FROM PYTHON SOURCE LINES 73-74

We can also retrieve all flows for a given name:

.. GENERATED FROM PYTHON SOURCE LINES 74-77

.. code-block:: Python

    flow_ids = openml.flows.get_flow_id(name=flow.name)
    print(flow_ids)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [20, 28, 33, 37, 41, 45, 50, 77, 811]




.. GENERATED FROM PYTHON SOURCE LINES 78-79

This also works with the actual model (generalizing the first part of this example):

.. GENERATED FROM PYTHON SOURCE LINES 79-84

.. code-block:: Python

    flow_ids = openml.flows.get_flow_id(model=clf, exact_version=False)
    print(flow_ids)

    # Deactivating test server
    openml.config.stop_using_configuration_for_example()




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [20, 28, 33, 37, 41, 45, 50, 77, 811]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 4.774 seconds)


.. _sphx_glr_download_examples_30_extended_flow_id_tutorial.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: flow_id_tutorial.ipynb <flow_id_tutorial.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: flow_id_tutorial.py <flow_id_tutorial.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: flow_id_tutorial.zip <flow_id_tutorial.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
